/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.androidbroadcast.framesdk.models

import dev.androidbroadcast.framesdk.models.AdminOnlyAction
import dev.androidbroadcast.framesdk.models.EmailBranding
import dev.androidbroadcast.framesdk.models.Image
import dev.androidbroadcast.framesdk.models.Watermark

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param access 
 * @param accountId 
 * @param adminOnlyActions 
 * @param backgroundColor 
 * @param bio 
 * @param color 
 * @param colors 
 * @param darkTheme 
 * @param defaultSessionWatermarkTemplateId 
 * @param emailBranding 
 * @param fontColor 
 * @param image 
 * @param link 
 * @param location 
 * @param memberLimit 
 * @param name 
 * @param slackWebhook 
 * @param solo 
 * @param storageLimit 
 * @param watermark 
 */
@Serializable

data class CreateTeamRequest (

    @SerialName(value = "access") val access: CreateTeamRequest.Access? = null,

    @SerialName(value = "account_id") val accountId: kotlin.String? = null,

    @SerialName(value = "admin_only_actions") val adminOnlyActions: AdminOnlyAction? = null,

    @SerialName(value = "background_color") val backgroundColor: kotlin.String? = null,

    @SerialName(value = "bio") val bio: kotlin.String? = null,

    @SerialName(value = "color") val color: kotlin.String? = null,

    @SerialName(value = "colors") val colors: kotlin.collections.List<kotlin.String>? = null,

    @SerialName(value = "dark_theme") val darkTheme: kotlin.Boolean? = false,

    @SerialName(value = "default_session_watermark_template_id") val defaultSessionWatermarkTemplateId: kotlin.String? = null,

    @SerialName(value = "email_branding") val emailBranding: EmailBranding? = null,

    @SerialName(value = "font_color") val fontColor: kotlin.String? = null,

    @SerialName(value = "image") val image: Image? = null,

    @SerialName(value = "link") val link: kotlin.String? = null,

    @SerialName(value = "location") val location: kotlin.String? = null,

    @SerialName(value = "member_limit") val memberLimit: kotlin.Int? = null,

    @SerialName(value = "name") val name: kotlin.String? = null,

    @SerialName(value = "slack_webhook") val slackWebhook: kotlin.String? = null,

    @SerialName(value = "solo") val solo: kotlin.Boolean? = false,

    @SerialName(value = "storage_limit") val storageLimit: kotlin.Int? = null,

    @SerialName(value = "watermark") val watermark: Watermark? = null

) {

    /**
     * 
     *
     * Values: `private`,`public`,restricted
     */
    @Serializable
    enum class Access(val value: kotlin.String) {
        @SerialName(value = "private") `private`("private"),
        @SerialName(value = "public") `public`("public"),
        @SerialName(value = "restricted") restricted("restricted");
    }

}

