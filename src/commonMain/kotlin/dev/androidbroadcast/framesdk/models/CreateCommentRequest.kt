/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.androidbroadcast.framesdk.models


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param text The body of the comment.
 * @param `annotation` Serialized list of geometry and/or drawing data.  Learn more [here](https://developer.frame.io/docs/workflows-assets/working-with-annotations)
 * @param page Page number for a comment (documents only).
 * @param pitch Pitch measurement for the comment (360deg video only).
 * @param timestamp Timestamp for the comment, in frames, starting at 0.   Comments can \"global\" to an asset in which you don't provide the timestamp, or if you're reviewing a \"document\" like a PDF then you would use `page` instead of `timestamp` to identify where the comment belongs.
 * @param yaw Yaw measurement for the comment (360deg video only).
 * @param duration Used to produce range-based comments, this is the duration measured in frames.
 * @param `private` Set to true to make your comment a \"Team-only Comment\" that won't be visible to anonymous reviewers or Collaborators.
 */
@Serializable

data class CreateCommentRequest (

    /* The body of the comment. */
    @SerialName(value = "text") @Required val text: kotlin.String,

    /* Serialized list of geometry and/or drawing data.  Learn more [here](https://developer.frame.io/docs/workflows-assets/working-with-annotations) */
    @SerialName(value = "annotation") val `annotation`: kotlin.String? = null,

    /* Page number for a comment (documents only). */
    @SerialName(value = "page") val page: kotlin.Int? = null,

    /* Pitch measurement for the comment (360deg video only). */
    @Deprecated(message = "This property is deprecated.")
    @SerialName(value = "pitch") val pitch: kotlin.Int? = null,

    /* Timestamp for the comment, in frames, starting at 0.   Comments can \"global\" to an asset in which you don't provide the timestamp, or if you're reviewing a \"document\" like a PDF then you would use `page` instead of `timestamp` to identify where the comment belongs. */
    @SerialName(value = "timestamp") val timestamp: kotlin.Double? = null,

    /* Yaw measurement for the comment (360deg video only). */
    @Deprecated(message = "This property is deprecated.")
    @SerialName(value = "yaw") val yaw: kotlin.Int? = null,

    /* Used to produce range-based comments, this is the duration measured in frames. */
    @SerialName(value = "duration") val duration: kotlin.Int? = null,

    /* Set to true to make your comment a \"Team-only Comment\" that won't be visible to anonymous reviewers or Collaborators. */
    @SerialName(value = "private") val `private`: kotlin.Boolean? = null

) {


}

