/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.androidbroadcast.framesdk.models

import dev.androidbroadcast.framesdk.models.Account
import dev.androidbroadcast.framesdk.models.AdminOnlyAction
import dev.androidbroadcast.framesdk.models.EmailBranding
import dev.androidbroadcast.framesdk.models.SessionWatermarkTemplate

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param accountId 
 * @param disableSbwmInternally 
 * @param creatorId 
 * @param storage 
 * @param defaultFontColor 
 * @param access 
 * @param fontColor 
 * @param userRole 
 * @param fileCount 
 * @param defaultSessionWatermarkTemplate 
 * @param link 
 * @param assetLifecyclePolicy 
 * @param uploadUrl 
 * @param adminOnlyActions 
 * @param deletedAt 
 * @param defaultBackgroundColor 
 * @param storageLimit 
 * @param location 
 * @param name 
 * @param defaultColor 
 * @param slackWebhook 
 * @param image64 
 * @param archivedStorage 
 * @param image128 
 * @param solo 
 * @param account 
 * @param image32 
 * @param insertedAt 
 * @param updatedAt 
 * @param projectCount 
 * @param duration 
 * @param teamImage 
 * @param collaboratorCount 
 * @param bio 
 * @param color 
 * @param emailBranding 
 * @param folderCount 
 * @param darkTheme 
 * @param defaultSessionWatermarkTemplateId 
 * @param sessionWatermarkTemplates 
 * @param id 
 * @param memberLimit 
 * @param frames 
 * @param memberCount 
 * @param image256 
 * @param backgroundColor 
 */
@Serializable

data class Team (

    @SerialName(value = "account_id") val accountId: kotlin.String? = null,

    @SerialName(value = "disable_sbwm_internally") val disableSbwmInternally: kotlin.Boolean? = false,

    @SerialName(value = "creator_id") val creatorId: kotlin.String? = null,

    @SerialName(value = "storage") val storage: kotlin.Int? = 0,

    @SerialName(value = "default_font_color") val defaultFontColor: kotlin.String? = null,

    @SerialName(value = "access") val access: Team.Access? = null,

    @SerialName(value = "font_color") val fontColor: kotlin.String? = null,

    @SerialName(value = "user_role") val userRole: kotlin.String? = null,

    @SerialName(value = "file_count") val fileCount: kotlin.Int? = 0,

    @SerialName(value = "default_session_watermark_template") val defaultSessionWatermarkTemplate: SessionWatermarkTemplate? = null,

    @SerialName(value = "link") val link: kotlin.String? = null,

    @SerialName(value = "asset_lifecycle_policy") val assetLifecyclePolicy: kotlin.Int? = null,

    @SerialName(value = "upload_url") val uploadUrl: kotlin.String? = null,

    @SerialName(value = "admin_only_actions") val adminOnlyActions: AdminOnlyAction? = null,

    @SerialName(value = "deleted_at") val deletedAt: kotlinx.datetime.Instant? = null,

    @SerialName(value = "default_background_color") val defaultBackgroundColor: kotlin.String? = null,

    @SerialName(value = "storage_limit") val storageLimit: kotlin.Int? = null,

    @SerialName(value = "location") val location: kotlin.String? = null,

    @SerialName(value = "name") val name: kotlin.String? = null,

    @SerialName(value = "default_color") val defaultColor: kotlin.String? = null,

    @SerialName(value = "slack_webhook") val slackWebhook: kotlin.String? = null,

    @SerialName(value = "image_64") val image64: kotlin.String? = null,

    @SerialName(value = "archived_storage") val archivedStorage: kotlin.Int? = 0,

    @SerialName(value = "image_128") val image128: kotlin.String? = null,

    @SerialName(value = "solo") val solo: kotlin.Boolean? = false,

    @SerialName(value = "account") val account: Account? = null,

    @SerialName(value = "image_32") val image32: kotlin.String? = null,

    @SerialName(value = "inserted_at") val insertedAt: kotlinx.datetime.Instant? = null,

    @SerialName(value = "updated_at") val updatedAt: kotlinx.datetime.Instant? = null,

    @SerialName(value = "project_count") val projectCount: kotlin.Int? = 0,

    @SerialName(value = "duration") val duration: kotlin.Int? = 0,

    @SerialName(value = "team_image") val teamImage: kotlin.String? = null,

    @SerialName(value = "collaborator_count") val collaboratorCount: kotlin.Int? = 0,

    @SerialName(value = "bio") val bio: kotlin.String? = null,

    @SerialName(value = "color") val color: kotlin.String? = null,

    @SerialName(value = "email_branding") val emailBranding: EmailBranding? = null,

    @SerialName(value = "folder_count") val folderCount: kotlin.Int? = 0,

    @SerialName(value = "dark_theme") val darkTheme: kotlin.Boolean? = false,

    @SerialName(value = "default_session_watermark_template_id") val defaultSessionWatermarkTemplateId: kotlin.String? = null,

    @SerialName(value = "session_watermark_templates") val sessionWatermarkTemplates: kotlin.collections.List<SessionWatermarkTemplate>? = null,

    @SerialName(value = "id") val id: kotlin.String? = null,

    @SerialName(value = "member_limit") val memberLimit: kotlin.Int? = null,

    @SerialName(value = "frames") val frames: kotlin.Int? = 0,

    @SerialName(value = "member_count") val memberCount: kotlin.Int? = 0,

    @SerialName(value = "image_256") val image256: kotlin.String? = null,

    @SerialName(value = "background_color") val backgroundColor: kotlin.String? = null

) {

    /**
     * 
     *
     * Values: `private`,`public`,restricted
     */
    @Serializable
    enum class Access(val value: kotlin.String) {
        @SerialName(value = "private") `private`("private"),
        @SerialName(value = "public") `public`("public"),
        @SerialName(value = "restricted") restricted("restricted");
    }

}

