/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.androidbroadcast.framesdk.models

import dev.androidbroadcast.framesdk.models.AssetSearchGetTeamIdParameter

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param accountId 
 * @param filter Custom ES filters to apply to your query
 * @param include 
 * @param includeDeleted Flag to include soft-deleted records in results
 * @param opts Additional request options
 * @param page The page to retrieve
 * @param pageSize The number of results to include in the page
 * @param projectId 
 * @param properties 
 * @param q Search text
 * @param query Search text
 * @param sharedProjects 
 * @param sort Sorting parameters
 * @param teamId 
 * @param type 
 */
@Serializable

data class AssetSearch (

    @SerialName(value = "account_id") val accountId: kotlin.String? = null,

    /* Custom ES filters to apply to your query */
    @SerialName(value = "filter") val filter: kotlin.String? = null,

    @SerialName(value = "include") val include: kotlin.String? = null,

    /* Flag to include soft-deleted records in results */
    @SerialName(value = "include_deleted") val includeDeleted: kotlin.Boolean? = null,

    /* Additional request options */
    @SerialName(value = "opts") val opts: kotlin.String? = null,

    /* The page to retrieve */
    @SerialName(value = "page") val page: kotlin.Int? = null,

    /* The number of results to include in the page */
    @SerialName(value = "page_size") val pageSize: kotlin.Int? = null,

    @SerialName(value = "project_id") val projectId: kotlin.String? = null,

    @SerialName(value = "properties") val properties: kotlin.String? = null,

    /* Search text */
    @SerialName(value = "q") val q: kotlin.String? = null,

    /* Search text */
    @SerialName(value = "query") val query: kotlin.String? = null,

    @SerialName(value = "shared_projects") val sharedProjects: kotlin.Boolean? = null,

    /* Sorting parameters */
    @SerialName(value = "sort") val sort: kotlin.String? = null,

    @SerialName(value = "team_id") val teamId: AssetSearchGetTeamIdParameter? = null,

    @SerialName(value = "type") val type: kotlin.String? = null

) {


}

