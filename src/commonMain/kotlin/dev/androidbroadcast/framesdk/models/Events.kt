/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.androidbroadcast.framesdk.models


import kotlinx.serialization.*

/**
 * 
 *
 * Values: projectPeriodCreated,projectPeriodUpdated,projectPeriodDeleted,assetPeriodCreated,assetPeriodCopied,assetPeriodUpdated,assetPeriodDeleted,assetPeriodReady,assetPeriodVersioned,actionPeriodExecuted,interactionPeriodExecuted,assetPeriodLabelPeriodUpdated,commentPeriodCreated,commentPeriodUpdated,commentPeriodDeleted,commentPeriodCompleted,commentPeriodUncompleted,reviewlinkPeriodCreated,collaboratorPeriodCreated,collaboratorPeriodDeleted,teammemberPeriodCreated,teammemberPeriodDeleted
 */
@Serializable
enum class Events(val value: kotlin.String) {

    @SerialName(value = "project.created")
    projectPeriodCreated("project.created"),

    @SerialName(value = "project.updated")
    projectPeriodUpdated("project.updated"),

    @SerialName(value = "project.deleted")
    projectPeriodDeleted("project.deleted"),

    @SerialName(value = "asset.created")
    assetPeriodCreated("asset.created"),

    @SerialName(value = "asset.copied")
    assetPeriodCopied("asset.copied"),

    @SerialName(value = "asset.updated")
    assetPeriodUpdated("asset.updated"),

    @SerialName(value = "asset.deleted")
    assetPeriodDeleted("asset.deleted"),

    @SerialName(value = "asset.ready")
    assetPeriodReady("asset.ready"),

    @SerialName(value = "asset.versioned")
    assetPeriodVersioned("asset.versioned"),

    @SerialName(value = "action.executed")
    actionPeriodExecuted("action.executed"),

    @SerialName(value = "interaction.executed")
    interactionPeriodExecuted("interaction.executed"),

    @SerialName(value = "asset.label.updated")
    assetPeriodLabelPeriodUpdated("asset.label.updated"),

    @SerialName(value = "comment.created")
    commentPeriodCreated("comment.created"),

    @SerialName(value = "comment.updated")
    commentPeriodUpdated("comment.updated"),

    @SerialName(value = "comment.deleted")
    commentPeriodDeleted("comment.deleted"),

    @SerialName(value = "comment.completed")
    commentPeriodCompleted("comment.completed"),

    @SerialName(value = "comment.uncompleted")
    commentPeriodUncompleted("comment.uncompleted"),

    @SerialName(value = "reviewlink.created")
    reviewlinkPeriodCreated("reviewlink.created"),

    @SerialName(value = "collaborator.created")
    collaboratorPeriodCreated("collaborator.created"),

    @SerialName(value = "collaborator.deleted")
    collaboratorPeriodDeleted("collaborator.deleted"),

    @SerialName(value = "teammember.created")
    teammemberPeriodCreated("teammember.created"),

    @SerialName(value = "teammember.deleted")
    teammemberPeriodDeleted("teammember.deleted");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is Events) "$data" else null

        /**
         * Returns a valid [Events] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): Events? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

