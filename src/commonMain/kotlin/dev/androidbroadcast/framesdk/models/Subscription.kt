/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.androidbroadcast.framesdk.models

import dev.androidbroadcast.framesdk.models.Plan

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param accountId 
 * @param archivedStorageLimit 
 * @param balance 
 * @param cancellationOption 
 * @param cancellationReason 
 * @param cancelledAt 
 * @param deletedAt 
 * @param id 
 * @param insertedAt 
 * @param lastPaymentAt 
 * @param memberLimit 
 * @param nextBillAt 
 * @param onTrial 
 * @param plan 
 * @param planId 
 * @param promotionExpiresAt 
 * @param promotionId 
 * @param requiresAutoscaling 
 * @param storageLimit 
 * @param subscriptionEndAt 
 * @param totalArchivedStorageLimit 
 * @param totalLifetimeFileLimit 
 * @param totalMemberLimit 
 * @param totalProjectLimit 
 * @param totalStorageLimit 
 * @param totalUserLimit 
 * @param updatedAt 
 * @param userLimit 
 */
@Serializable

data class Subscription (

    @SerialName(value = "account_id") val accountId: kotlin.String? = null,

    @SerialName(value = "archived_storage_limit") val archivedStorageLimit: kotlin.Int? = null,

    @SerialName(value = "balance") val balance: kotlin.Int? = null,

    @SerialName(value = "cancellation_option") val cancellationOption: kotlin.String? = null,

    @SerialName(value = "cancellation_reason") val cancellationReason: kotlin.String? = null,

    @SerialName(value = "cancelled_at") val cancelledAt: kotlinx.datetime.Instant? = null,

    @SerialName(value = "deleted_at") val deletedAt: kotlinx.datetime.Instant? = null,

    @SerialName(value = "id") val id: kotlin.String? = null,

    @SerialName(value = "inserted_at") val insertedAt: kotlinx.datetime.Instant? = null,

    @SerialName(value = "last_payment_at") val lastPaymentAt: kotlinx.datetime.Instant? = null,

    @SerialName(value = "member_limit") val memberLimit: kotlin.Int? = null,

    @SerialName(value = "next_bill_at") val nextBillAt: kotlinx.datetime.Instant? = null,

    @SerialName(value = "on_trial") val onTrial: kotlin.Boolean? = null,

    @SerialName(value = "plan") val plan: Plan? = null,

    @SerialName(value = "plan_id") val planId: kotlin.String? = null,

    @SerialName(value = "promotion_expires_at") val promotionExpiresAt: kotlinx.datetime.Instant? = null,

    @SerialName(value = "promotion_id") val promotionId: kotlin.String? = null,

    @SerialName(value = "requires_autoscaling") val requiresAutoscaling: kotlin.Boolean? = null,

    @SerialName(value = "storage_limit") val storageLimit: kotlin.Int? = null,

    @SerialName(value = "subscription_end_at") val subscriptionEndAt: kotlinx.datetime.Instant? = null,

    @SerialName(value = "total_archived_storage_limit") val totalArchivedStorageLimit: kotlin.Int? = null,

    @SerialName(value = "total_lifetime_file_limit") val totalLifetimeFileLimit: kotlin.Int? = null,

    @SerialName(value = "total_member_limit") val totalMemberLimit: kotlin.Int? = null,

    @SerialName(value = "total_project_limit") val totalProjectLimit: kotlin.Int? = null,

    @SerialName(value = "total_storage_limit") val totalStorageLimit: kotlin.Int? = null,

    @SerialName(value = "total_user_limit") val totalUserLimit: kotlin.Int? = null,

    @SerialName(value = "updated_at") val updatedAt: kotlinx.datetime.Instant? = null,

    @SerialName(value = "user_limit") val userLimit: kotlin.Int? = null

) {


}

