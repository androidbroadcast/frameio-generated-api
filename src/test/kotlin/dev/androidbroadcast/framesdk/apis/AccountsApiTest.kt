/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.androidbroadcast.framesdk.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import dev.androidbroadcast.framesdk.apis.AccountsApi
import dev.androidbroadcast.framesdk.models.Account
import dev.androidbroadcast.framesdk.models.AccountMembership
import dev.androidbroadcast.framesdk.models.DeviceListAccounts200ResponseInner
import dev.androidbroadcast.framesdk.models.HTTPError
import dev.androidbroadcast.framesdk.models.ProjectDeviceAuthorization

class AccountsApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of AccountsApi
        //val apiInstance = AccountsApi()

        // to test deviceIdentify
        should("test deviceIdentify") {
            // uncomment below to test deviceIdentify
            //val xClientVersion : kotlin.String = 2.16.4 // kotlin.String | Firmware or software version of a C2C integration. Will be used to determine the correct Device Model configuration for the device when multiple are available. Must be a valid semantic version.    For more on semantic versions, see here: https://semver.org/
            //val result : ProjectDeviceAuthorization = apiInstance.deviceIdentify(xClientVersion)
            //result shouldBe ("TODO")
        }

        // to test deviceListAccounts
        should("test deviceListAccounts") {
            // uncomment below to test deviceListAccounts
            //val xClientVersion : kotlin.String = 2.16.4 // kotlin.String | Firmware or software version of a C2C integration. Will be used to determine the correct Device Model configuration for the device when multiple are available. Must be a valid semantic version.    For more on semantic versions, see here: https://semver.org/
            //val result : kotlin.collections.Set<DeviceListAccounts200ResponseInner> = apiInstance.deviceListAccounts(xClientVersion)
            //result shouldBe ("TODO")
        }

        // to test getAccount
        should("test getAccount") {
            // uncomment below to test getAccount
            //val accountId : kotlin.String = 38400000-8cf0-11bd-b23e-10b96e4ef00d // kotlin.String | Account ID
            //val result : Account = apiInstance.getAccount(accountId)
            //result shouldBe ("TODO")
        }

        // to test getAccountMembership
        should("test getAccountMembership") {
            // uncomment below to test getAccountMembership
            //val accountId : kotlin.String = 38400000-8cf0-11bd-b23e-10b96e4ef00d // kotlin.String | Account ID
            //val result : AccountMembership = apiInstance.getAccountMembership(accountId)
            //result shouldBe ("TODO")
        }

        // to test getAccounts
        should("test getAccounts") {
            // uncomment below to test getAccounts
            //val result : kotlin.collections.List<Account> = apiInstance.getAccounts()
            //result shouldBe ("TODO")
        }

    }
}
