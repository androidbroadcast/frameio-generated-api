/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.androidbroadcast.framesdk.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import dev.androidbroadcast.framesdk.apis.WebhooksApi
import dev.androidbroadcast.framesdk.models.CreateWebhookForTeamRequest
import dev.androidbroadcast.framesdk.models.HTTPError
import dev.androidbroadcast.framesdk.models.Webhook

class WebhooksApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of WebhooksApi
        //val apiInstance = WebhooksApi()

        // to test createWebhookForTeam
        should("test createWebhookForTeam") {
            // uncomment below to test createWebhookForTeam
            //val teamId : kotlin.String = 38400000-8cf0-11bd-b23e-10b96e4ef00d // kotlin.String | 
            //val createWebhookForTeamRequest : CreateWebhookForTeamRequest =  // CreateWebhookForTeamRequest | Webhook to create or update
            //val result : Webhook = apiInstance.createWebhookForTeam(teamId, createWebhookForTeamRequest)
            //result shouldBe ("TODO")
        }

        // to test deleteWebhook
        should("test deleteWebhook") {
            // uncomment below to test deleteWebhook
            //val hookId : kotlin.String = eefb57e0-79f2-4bc7-9b70-99fbc175175c // kotlin.String | Webhook ID
            //val result : Webhook = apiInstance.deleteWebhook(hookId)
            //result shouldBe ("TODO")
        }

        // to test getWebhook
        should("test getWebhook") {
            // uncomment below to test getWebhook
            //val hookId : kotlin.String = eefb57e0-79f2-4bc7-9b70-99fbc175175c // kotlin.String | Webhook ID
            //val result : Webhook = apiInstance.getWebhook(hookId)
            //result shouldBe ("TODO")
        }

        // to test getWebhooksByAccount
        should("test getWebhooksByAccount") {
            // uncomment below to test getWebhooksByAccount
            //val accountId : kotlin.String = 38400000-8cf0-11bd-b23e-10b96e4ef00d // kotlin.String | Account ID
            //val result : kotlin.collections.List<Webhook> = apiInstance.getWebhooksByAccount(accountId)
            //result shouldBe ("TODO")
        }

        // to test updateWebhook
        should("test updateWebhook") {
            // uncomment below to test updateWebhook
            //val hookId : kotlin.String = eefb57e0-79f2-4bc7-9b70-99fbc175175c // kotlin.String | Webhook ID
            //val createWebhookForTeamRequest : CreateWebhookForTeamRequest =  // CreateWebhookForTeamRequest | Webhook to create or update
            //val result : Webhook = apiInstance.updateWebhook(hookId, createWebhookForTeamRequest)
            //result shouldBe ("TODO")
        }

    }
}
