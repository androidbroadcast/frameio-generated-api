/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.androidbroadcast.framesdk.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import dev.androidbroadcast.framesdk.models.CreateCommentRequest

class CreateCommentRequestTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CreateCommentRequest
        //val modelInstance = CreateCommentRequest()

        // to test the property `text` - The body of the comment.
        should("test text") {
            // uncomment below to test the property
            //modelInstance.text shouldBe ("TODO")
        }

        // to test the property ``annotation`` - Serialized list of geometry and/or drawing data.  Learn more [here](https://developer.frame.io/docs/workflows-assets/working-with-annotations)
        should("test `annotation`") {
            // uncomment below to test the property
            //modelInstance.`annotation` shouldBe ("TODO")
        }

        // to test the property `page` - Page number for a comment (documents only).
        should("test page") {
            // uncomment below to test the property
            //modelInstance.page shouldBe ("TODO")
        }

        // to test the property `pitch` - Pitch measurement for the comment (360deg video only).
        should("test pitch") {
            // uncomment below to test the property
            //modelInstance.pitch shouldBe ("TODO")
        }

        // to test the property `timestamp` - Timestamp for the comment, in frames, starting at 0.   Comments can \"global\" to an asset in which you don't provide the timestamp, or if you're reviewing a \"document\" like a PDF then you would use `page` instead of `timestamp` to identify where the comment belongs.
        should("test timestamp") {
            // uncomment below to test the property
            //modelInstance.timestamp shouldBe ("TODO")
        }

        // to test the property `yaw` - Yaw measurement for the comment (360deg video only).
        should("test yaw") {
            // uncomment below to test the property
            //modelInstance.yaw shouldBe ("TODO")
        }

        // to test the property `duration` - Used to produce range-based comments, this is the duration measured in frames.
        should("test duration") {
            // uncomment below to test the property
            //modelInstance.duration shouldBe ("TODO")
        }

        // to test the property ``private`` - Set to true to make your comment a \"Team-only Comment\" that won't be visible to anonymous reviewers or Collaborators.
        should("test `private`") {
            // uncomment below to test the property
            //modelInstance.`private` shouldBe ("TODO")
        }

    }
}
