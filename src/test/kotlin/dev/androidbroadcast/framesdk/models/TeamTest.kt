/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.androidbroadcast.framesdk.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import dev.androidbroadcast.framesdk.models.Team
import dev.androidbroadcast.framesdk.models.Account
import dev.androidbroadcast.framesdk.models.AdminOnlyAction
import dev.androidbroadcast.framesdk.models.EmailBranding
import dev.androidbroadcast.framesdk.models.SessionWatermarkTemplate

class TeamTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of Team
        //val modelInstance = Team()

        // to test the property `accountId`
        should("test accountId") {
            // uncomment below to test the property
            //modelInstance.accountId shouldBe ("TODO")
        }

        // to test the property `disableSbwmInternally`
        should("test disableSbwmInternally") {
            // uncomment below to test the property
            //modelInstance.disableSbwmInternally shouldBe ("TODO")
        }

        // to test the property `creatorId`
        should("test creatorId") {
            // uncomment below to test the property
            //modelInstance.creatorId shouldBe ("TODO")
        }

        // to test the property `storage`
        should("test storage") {
            // uncomment below to test the property
            //modelInstance.storage shouldBe ("TODO")
        }

        // to test the property `defaultFontColor`
        should("test defaultFontColor") {
            // uncomment below to test the property
            //modelInstance.defaultFontColor shouldBe ("TODO")
        }

        // to test the property `access`
        should("test access") {
            // uncomment below to test the property
            //modelInstance.access shouldBe ("TODO")
        }

        // to test the property `fontColor`
        should("test fontColor") {
            // uncomment below to test the property
            //modelInstance.fontColor shouldBe ("TODO")
        }

        // to test the property `userRole`
        should("test userRole") {
            // uncomment below to test the property
            //modelInstance.userRole shouldBe ("TODO")
        }

        // to test the property `fileCount`
        should("test fileCount") {
            // uncomment below to test the property
            //modelInstance.fileCount shouldBe ("TODO")
        }

        // to test the property `defaultSessionWatermarkTemplate`
        should("test defaultSessionWatermarkTemplate") {
            // uncomment below to test the property
            //modelInstance.defaultSessionWatermarkTemplate shouldBe ("TODO")
        }

        // to test the property `link`
        should("test link") {
            // uncomment below to test the property
            //modelInstance.link shouldBe ("TODO")
        }

        // to test the property `assetLifecyclePolicy`
        should("test assetLifecyclePolicy") {
            // uncomment below to test the property
            //modelInstance.assetLifecyclePolicy shouldBe ("TODO")
        }

        // to test the property `uploadUrl`
        should("test uploadUrl") {
            // uncomment below to test the property
            //modelInstance.uploadUrl shouldBe ("TODO")
        }

        // to test the property `adminOnlyActions`
        should("test adminOnlyActions") {
            // uncomment below to test the property
            //modelInstance.adminOnlyActions shouldBe ("TODO")
        }

        // to test the property `deletedAt`
        should("test deletedAt") {
            // uncomment below to test the property
            //modelInstance.deletedAt shouldBe ("TODO")
        }

        // to test the property `defaultBackgroundColor`
        should("test defaultBackgroundColor") {
            // uncomment below to test the property
            //modelInstance.defaultBackgroundColor shouldBe ("TODO")
        }

        // to test the property `storageLimit`
        should("test storageLimit") {
            // uncomment below to test the property
            //modelInstance.storageLimit shouldBe ("TODO")
        }

        // to test the property `location`
        should("test location") {
            // uncomment below to test the property
            //modelInstance.location shouldBe ("TODO")
        }

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `defaultColor`
        should("test defaultColor") {
            // uncomment below to test the property
            //modelInstance.defaultColor shouldBe ("TODO")
        }

        // to test the property `slackWebhook`
        should("test slackWebhook") {
            // uncomment below to test the property
            //modelInstance.slackWebhook shouldBe ("TODO")
        }

        // to test the property `image64`
        should("test image64") {
            // uncomment below to test the property
            //modelInstance.image64 shouldBe ("TODO")
        }

        // to test the property `archivedStorage`
        should("test archivedStorage") {
            // uncomment below to test the property
            //modelInstance.archivedStorage shouldBe ("TODO")
        }

        // to test the property `image128`
        should("test image128") {
            // uncomment below to test the property
            //modelInstance.image128 shouldBe ("TODO")
        }

        // to test the property `solo`
        should("test solo") {
            // uncomment below to test the property
            //modelInstance.solo shouldBe ("TODO")
        }

        // to test the property `account`
        should("test account") {
            // uncomment below to test the property
            //modelInstance.account shouldBe ("TODO")
        }

        // to test the property `image32`
        should("test image32") {
            // uncomment below to test the property
            //modelInstance.image32 shouldBe ("TODO")
        }

        // to test the property `insertedAt`
        should("test insertedAt") {
            // uncomment below to test the property
            //modelInstance.insertedAt shouldBe ("TODO")
        }

        // to test the property `updatedAt`
        should("test updatedAt") {
            // uncomment below to test the property
            //modelInstance.updatedAt shouldBe ("TODO")
        }

        // to test the property `projectCount`
        should("test projectCount") {
            // uncomment below to test the property
            //modelInstance.projectCount shouldBe ("TODO")
        }

        // to test the property `duration`
        should("test duration") {
            // uncomment below to test the property
            //modelInstance.duration shouldBe ("TODO")
        }

        // to test the property `teamImage`
        should("test teamImage") {
            // uncomment below to test the property
            //modelInstance.teamImage shouldBe ("TODO")
        }

        // to test the property `collaboratorCount`
        should("test collaboratorCount") {
            // uncomment below to test the property
            //modelInstance.collaboratorCount shouldBe ("TODO")
        }

        // to test the property `bio`
        should("test bio") {
            // uncomment below to test the property
            //modelInstance.bio shouldBe ("TODO")
        }

        // to test the property `color`
        should("test color") {
            // uncomment below to test the property
            //modelInstance.color shouldBe ("TODO")
        }

        // to test the property `emailBranding`
        should("test emailBranding") {
            // uncomment below to test the property
            //modelInstance.emailBranding shouldBe ("TODO")
        }

        // to test the property `folderCount`
        should("test folderCount") {
            // uncomment below to test the property
            //modelInstance.folderCount shouldBe ("TODO")
        }

        // to test the property `darkTheme`
        should("test darkTheme") {
            // uncomment below to test the property
            //modelInstance.darkTheme shouldBe ("TODO")
        }

        // to test the property `defaultSessionWatermarkTemplateId`
        should("test defaultSessionWatermarkTemplateId") {
            // uncomment below to test the property
            //modelInstance.defaultSessionWatermarkTemplateId shouldBe ("TODO")
        }

        // to test the property `sessionWatermarkTemplates`
        should("test sessionWatermarkTemplates") {
            // uncomment below to test the property
            //modelInstance.sessionWatermarkTemplates shouldBe ("TODO")
        }

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `memberLimit`
        should("test memberLimit") {
            // uncomment below to test the property
            //modelInstance.memberLimit shouldBe ("TODO")
        }

        // to test the property `frames`
        should("test frames") {
            // uncomment below to test the property
            //modelInstance.frames shouldBe ("TODO")
        }

        // to test the property `memberCount`
        should("test memberCount") {
            // uncomment below to test the property
            //modelInstance.memberCount shouldBe ("TODO")
        }

        // to test the property `image256`
        should("test image256") {
            // uncomment below to test the property
            //modelInstance.image256 shouldBe ("TODO")
        }

        // to test the property `backgroundColor`
        should("test backgroundColor") {
            // uncomment below to test the property
            //modelInstance.backgroundColor shouldBe ("TODO")
        }

    }
}
