/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.androidbroadcast.framesdk.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import dev.androidbroadcast.framesdk.models.CreateTeamRequest
import dev.androidbroadcast.framesdk.models.AdminOnlyAction
import dev.androidbroadcast.framesdk.models.EmailBranding
import dev.androidbroadcast.framesdk.models.Image
import dev.androidbroadcast.framesdk.models.Watermark

class CreateTeamRequestTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CreateTeamRequest
        //val modelInstance = CreateTeamRequest()

        // to test the property `access`
        should("test access") {
            // uncomment below to test the property
            //modelInstance.access shouldBe ("TODO")
        }

        // to test the property `accountId`
        should("test accountId") {
            // uncomment below to test the property
            //modelInstance.accountId shouldBe ("TODO")
        }

        // to test the property `adminOnlyActions`
        should("test adminOnlyActions") {
            // uncomment below to test the property
            //modelInstance.adminOnlyActions shouldBe ("TODO")
        }

        // to test the property `backgroundColor`
        should("test backgroundColor") {
            // uncomment below to test the property
            //modelInstance.backgroundColor shouldBe ("TODO")
        }

        // to test the property `bio`
        should("test bio") {
            // uncomment below to test the property
            //modelInstance.bio shouldBe ("TODO")
        }

        // to test the property `color`
        should("test color") {
            // uncomment below to test the property
            //modelInstance.color shouldBe ("TODO")
        }

        // to test the property `colors`
        should("test colors") {
            // uncomment below to test the property
            //modelInstance.colors shouldBe ("TODO")
        }

        // to test the property `darkTheme`
        should("test darkTheme") {
            // uncomment below to test the property
            //modelInstance.darkTheme shouldBe ("TODO")
        }

        // to test the property `defaultSessionWatermarkTemplateId`
        should("test defaultSessionWatermarkTemplateId") {
            // uncomment below to test the property
            //modelInstance.defaultSessionWatermarkTemplateId shouldBe ("TODO")
        }

        // to test the property `emailBranding`
        should("test emailBranding") {
            // uncomment below to test the property
            //modelInstance.emailBranding shouldBe ("TODO")
        }

        // to test the property `fontColor`
        should("test fontColor") {
            // uncomment below to test the property
            //modelInstance.fontColor shouldBe ("TODO")
        }

        // to test the property `image`
        should("test image") {
            // uncomment below to test the property
            //modelInstance.image shouldBe ("TODO")
        }

        // to test the property `link`
        should("test link") {
            // uncomment below to test the property
            //modelInstance.link shouldBe ("TODO")
        }

        // to test the property `location`
        should("test location") {
            // uncomment below to test the property
            //modelInstance.location shouldBe ("TODO")
        }

        // to test the property `memberLimit`
        should("test memberLimit") {
            // uncomment below to test the property
            //modelInstance.memberLimit shouldBe ("TODO")
        }

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `slackWebhook`
        should("test slackWebhook") {
            // uncomment below to test the property
            //modelInstance.slackWebhook shouldBe ("TODO")
        }

        // to test the property `solo`
        should("test solo") {
            // uncomment below to test the property
            //modelInstance.solo shouldBe ("TODO")
        }

        // to test the property `storageLimit`
        should("test storageLimit") {
            // uncomment below to test the property
            //modelInstance.storageLimit shouldBe ("TODO")
        }

        // to test the property `watermark`
        should("test watermark") {
            // uncomment below to test the property
            //modelInstance.watermark shouldBe ("TODO")
        }

    }
}
