/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.androidbroadcast.framesdk.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import dev.androidbroadcast.framesdk.models.AuditActor
import dev.androidbroadcast.framesdk.models.AnonymousUser
import dev.androidbroadcast.framesdk.models.ProjectPreferences
import dev.androidbroadcast.framesdk.models.User
import dev.androidbroadcast.framesdk.models.UserRoles

class AuditActorTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of AuditActor
        //val modelInstance = AuditActor()

        // to test the property `digestFrequency`
        should("test digestFrequency") {
            // uncomment below to test the property
            //modelInstance.digestFrequency shouldBe ("TODO")
        }

        // to test the property `featuresSeen`
        should("test featuresSeen") {
            // uncomment below to test the property
            //modelInstance.featuresSeen shouldBe ("TODO")
        }

        // to test the property `profileImageOriginal`
        should("test profileImageOriginal") {
            // uncomment below to test the property
            //modelInstance.profileImageOriginal shouldBe ("TODO")
        }

        // to test the property `image32`
        should("test image32") {
            // uncomment below to test the property
            //modelInstance.image32 shouldBe ("TODO")
        }

        // to test the property `image128`
        should("test image128") {
            // uncomment below to test the property
            //modelInstance.image128 shouldBe ("TODO")
        }

        // to test the property `fromGoogle`
        should("test fromGoogle") {
            // uncomment below to test the property
            //modelInstance.fromGoogle shouldBe ("TODO")
        }

        // to test the property `mfaEnforcedAt`
        should("test mfaEnforcedAt") {
            // uncomment below to test the property
            //modelInstance.mfaEnforcedAt shouldBe ("TODO")
        }

        // to test the property `email`
        should("test email") {
            // uncomment below to test the property
            //modelInstance.email shouldBe ("TODO")
        }

        // to test the property `bio`
        should("test bio") {
            // uncomment below to test the property
            //modelInstance.bio shouldBe ("TODO")
        }

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `image64`
        should("test image64") {
            // uncomment below to test the property
            //modelInstance.image64 shouldBe ("TODO")
        }

        // to test the property `timezoneValue`
        should("test timezoneValue") {
            // uncomment below to test the property
            //modelInstance.timezoneValue shouldBe ("TODO")
        }

        // to test the property `accountId`
        should("test accountId") {
            // uncomment below to test the property
            //modelInstance.accountId shouldBe ("TODO")
        }

        // to test the property `updatedAt`
        should("test updatedAt") {
            // uncomment below to test the property
            //modelInstance.updatedAt shouldBe ("TODO")
        }

        // to test the property `image256`
        should("test image256") {
            // uncomment below to test the property
            //modelInstance.image256 shouldBe ("TODO")
        }

        // to test the property `type`
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `userHash`
        should("test userHash") {
            // uncomment below to test the property
            //modelInstance.userHash shouldBe ("TODO")
        }

        // to test the property `context`
        should("test context") {
            // uncomment below to test the property
            //modelInstance.context shouldBe ("TODO")
        }

        // to test the property `uploadUrl`
        should("test uploadUrl") {
            // uncomment below to test the property
            //modelInstance.uploadUrl shouldBe ("TODO")
        }

        // to test the property `location`
        should("test location") {
            // uncomment below to test the property
            //modelInstance.location shouldBe ("TODO")
        }

        // to test the property `phone`
        should("test phone") {
            // uncomment below to test the property
            //modelInstance.phone shouldBe ("TODO")
        }

        // to test the property `deletedAt`
        should("test deletedAt") {
            // uncomment below to test the property
            //modelInstance.deletedAt shouldBe ("TODO")
        }

        // to test the property `profileImage`
        should("test profileImage") {
            // uncomment below to test the property
            //modelInstance.profileImage shouldBe ("TODO")
        }

        // to test the property `firstLoginAt`
        should("test firstLoginAt") {
            // uncomment below to test the property
            //modelInstance.firstLoginAt shouldBe ("TODO")
        }

        // to test the property `joinedVia`
        should("test joinedVia") {
            // uncomment below to test the property
            //modelInstance.joinedVia shouldBe ("TODO")
        }

        // to test the property `emailConfirmBy`
        should("test emailConfirmBy") {
            // uncomment below to test the property
            //modelInstance.emailConfirmBy shouldBe ("TODO")
        }

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `nextDigestDate`
        should("test nextDigestDate") {
            // uncomment below to test the property
            //modelInstance.nextDigestDate shouldBe ("TODO")
        }

        // to test the property `emailPreferences`
        should("test emailPreferences") {
            // uncomment below to test the property
            //modelInstance.emailPreferences shouldBe ("TODO")
        }

        // to test the property `lastSeen`
        should("test lastSeen") {
            // uncomment below to test the property
            //modelInstance.lastSeen shouldBe ("TODO")
        }

        // to test the property `insertedAt`
        should("test insertedAt") {
            // uncomment below to test the property
            //modelInstance.insertedAt shouldBe ("TODO")
        }

        // to test the property `roles`
        should("test roles") {
            // uncomment below to test the property
            //modelInstance.roles shouldBe ("TODO")
        }

        // to test the property `userDefaultColor`
        should("test userDefaultColor") {
            // uncomment below to test the property
            //modelInstance.userDefaultColor shouldBe ("TODO")
        }

        // to test the property `notificationPreferences`
        should("test notificationPreferences") {
            // uncomment below to test the property
            //modelInstance.notificationPreferences shouldBe ("TODO")
        }

    }
}
