/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.androidbroadcast.framesdk.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import dev.androidbroadcast.framesdk.models.Subscription
import dev.androidbroadcast.framesdk.models.Plan

class SubscriptionTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of Subscription
        //val modelInstance = Subscription()

        // to test the property `accountId`
        should("test accountId") {
            // uncomment below to test the property
            //modelInstance.accountId shouldBe ("TODO")
        }

        // to test the property `archivedStorageLimit`
        should("test archivedStorageLimit") {
            // uncomment below to test the property
            //modelInstance.archivedStorageLimit shouldBe ("TODO")
        }

        // to test the property `balance`
        should("test balance") {
            // uncomment below to test the property
            //modelInstance.balance shouldBe ("TODO")
        }

        // to test the property `cancellationOption`
        should("test cancellationOption") {
            // uncomment below to test the property
            //modelInstance.cancellationOption shouldBe ("TODO")
        }

        // to test the property `cancellationReason`
        should("test cancellationReason") {
            // uncomment below to test the property
            //modelInstance.cancellationReason shouldBe ("TODO")
        }

        // to test the property `cancelledAt`
        should("test cancelledAt") {
            // uncomment below to test the property
            //modelInstance.cancelledAt shouldBe ("TODO")
        }

        // to test the property `deletedAt`
        should("test deletedAt") {
            // uncomment below to test the property
            //modelInstance.deletedAt shouldBe ("TODO")
        }

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `insertedAt`
        should("test insertedAt") {
            // uncomment below to test the property
            //modelInstance.insertedAt shouldBe ("TODO")
        }

        // to test the property `lastPaymentAt`
        should("test lastPaymentAt") {
            // uncomment below to test the property
            //modelInstance.lastPaymentAt shouldBe ("TODO")
        }

        // to test the property `memberLimit`
        should("test memberLimit") {
            // uncomment below to test the property
            //modelInstance.memberLimit shouldBe ("TODO")
        }

        // to test the property `nextBillAt`
        should("test nextBillAt") {
            // uncomment below to test the property
            //modelInstance.nextBillAt shouldBe ("TODO")
        }

        // to test the property `onTrial`
        should("test onTrial") {
            // uncomment below to test the property
            //modelInstance.onTrial shouldBe ("TODO")
        }

        // to test the property `plan`
        should("test plan") {
            // uncomment below to test the property
            //modelInstance.plan shouldBe ("TODO")
        }

        // to test the property `planId`
        should("test planId") {
            // uncomment below to test the property
            //modelInstance.planId shouldBe ("TODO")
        }

        // to test the property `promotionExpiresAt`
        should("test promotionExpiresAt") {
            // uncomment below to test the property
            //modelInstance.promotionExpiresAt shouldBe ("TODO")
        }

        // to test the property `promotionId`
        should("test promotionId") {
            // uncomment below to test the property
            //modelInstance.promotionId shouldBe ("TODO")
        }

        // to test the property `requiresAutoscaling`
        should("test requiresAutoscaling") {
            // uncomment below to test the property
            //modelInstance.requiresAutoscaling shouldBe ("TODO")
        }

        // to test the property `storageLimit`
        should("test storageLimit") {
            // uncomment below to test the property
            //modelInstance.storageLimit shouldBe ("TODO")
        }

        // to test the property `subscriptionEndAt`
        should("test subscriptionEndAt") {
            // uncomment below to test the property
            //modelInstance.subscriptionEndAt shouldBe ("TODO")
        }

        // to test the property `totalArchivedStorageLimit`
        should("test totalArchivedStorageLimit") {
            // uncomment below to test the property
            //modelInstance.totalArchivedStorageLimit shouldBe ("TODO")
        }

        // to test the property `totalLifetimeFileLimit`
        should("test totalLifetimeFileLimit") {
            // uncomment below to test the property
            //modelInstance.totalLifetimeFileLimit shouldBe ("TODO")
        }

        // to test the property `totalMemberLimit`
        should("test totalMemberLimit") {
            // uncomment below to test the property
            //modelInstance.totalMemberLimit shouldBe ("TODO")
        }

        // to test the property `totalProjectLimit`
        should("test totalProjectLimit") {
            // uncomment below to test the property
            //modelInstance.totalProjectLimit shouldBe ("TODO")
        }

        // to test the property `totalStorageLimit`
        should("test totalStorageLimit") {
            // uncomment below to test the property
            //modelInstance.totalStorageLimit shouldBe ("TODO")
        }

        // to test the property `totalUserLimit`
        should("test totalUserLimit") {
            // uncomment below to test the property
            //modelInstance.totalUserLimit shouldBe ("TODO")
        }

        // to test the property `updatedAt`
        should("test updatedAt") {
            // uncomment below to test the property
            //modelInstance.updatedAt shouldBe ("TODO")
        }

        // to test the property `userLimit`
        should("test userLimit") {
            // uncomment below to test the property
            //modelInstance.userLimit shouldBe ("TODO")
        }

    }
}
