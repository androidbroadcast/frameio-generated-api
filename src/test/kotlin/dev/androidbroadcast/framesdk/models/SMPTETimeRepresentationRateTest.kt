/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.androidbroadcast.framesdk.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import dev.androidbroadcast.framesdk.models.SMPTETimeRepresentationRate

class SMPTETimeRepresentationRateTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of SMPTETimeRepresentationRate
        //val modelInstance = SMPTETimeRepresentationRate()

        // to test the property `playback` - Playback speed of the framerate, represented as a `[numerator, denominator]` pair in an array. Optionally, this field also accepts fractions in string format, `\"numerator/denominator\"`. NTSC framerates like 23.98 should be sent as they're fully qualified rational value: `[24000, 1001]`.
        should("test playback") {
            // uncomment below to test the property
            //modelInstance.playback shouldBe ("TODO")
        }

        // to test the property `ntsc` - The NTSC standard of the timecode. Can be `\"non_drop\"` or `null`. If `null`, playback must represent a whole-number value, such as `[24, 1]`. If `\"non_drop\"`, playback must represent a valid NTSC framerate, such as `[24000, 1001]`.
        should("test ntsc") {
            // uncomment below to test the property
            //modelInstance.ntsc shouldBe ("TODO")
        }

    }
}
