/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.androidbroadcast.framesdk.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import dev.androidbroadcast.framesdk.models.AuthDeviceConfirmDevice200Response

class AuthDeviceConfirmDevice200ResponseTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of AuthDeviceConfirmDevice200Response
        //val modelInstance = AuthDeviceConfirmDevice200Response()

        // to test the property `accessToken` - This is your key to the rest of the Frame.io backend. We will need to add this to the header of the rest of the requests we are going to make in these tutorials.
        should("test accessToken") {
            // uncomment below to test the property
            //modelInstance.accessToken shouldBe ("TODO")
        }

        // to test the property `expiresIn` - The number of seconds until `access_token` expires. After the token's time is up, it will need to be refreshed, which we will go over in a future tutorial.
        should("test expiresIn") {
            // uncomment below to test the property
            //modelInstance.expiresIn shouldBe ("TODO")
        }

        // to test the property `refreshToken` - A token we can use to manage our access_token. It will most commonly be used to refresh our authorization, but it can also be used to revoke it.
        should("test refreshToken") {
            // uncomment below to test the property
            //modelInstance.refreshToken shouldBe ("TODO")
        }

        // to test the property `tokenType` - Will always be bearer for the C2C API, and is not actionable.
        should("test tokenType") {
            // uncomment below to test the property
            //modelInstance.tokenType shouldBe ("TODO")
        }

    }
}
