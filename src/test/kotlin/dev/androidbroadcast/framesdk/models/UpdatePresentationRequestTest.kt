/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.androidbroadcast.framesdk.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import dev.androidbroadcast.framesdk.models.UpdatePresentationRequest
import dev.androidbroadcast.framesdk.models.ShareableEntityAccessControl

class UpdatePresentationRequestTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of UpdatePresentationRequest
        //val modelInstance = UpdatePresentationRequest()

        // to test the property `accessControl`
        should("test accessControl") {
            // uncomment below to test the property
            //modelInstance.accessControl shouldBe ("TODO")
        }

        // to test the property `assetId`
        should("test assetId") {
            // uncomment below to test the property
            //modelInstance.assetId shouldBe ("TODO")
        }

        // to test the property `autoplay`
        should("test autoplay") {
            // uncomment below to test the property
            //modelInstance.autoplay shouldBe ("TODO")
        }

        // to test the property `backgroundColor`
        should("test backgroundColor") {
            // uncomment below to test the property
            //modelInstance.backgroundColor shouldBe ("TODO")
        }

        // to test the property `canDownload`
        should("test canDownload") {
            // uncomment below to test the property
            //modelInstance.canDownload shouldBe ("TODO")
        }

        // to test the property `color`
        should("test color") {
            // uncomment below to test the property
            //modelInstance.color shouldBe ("TODO")
        }

        // to test the property `deletedAt`
        should("test deletedAt") {
            // uncomment below to test the property
            //modelInstance.deletedAt shouldBe ("TODO")
        }

        // to test the property `description`
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `enabled`
        should("test enabled") {
            // uncomment below to test the property
            //modelInstance.enabled shouldBe ("TODO")
        }

        // to test the property `expiresAt`
        should("test expiresAt") {
            // uncomment below to test the property
            //modelInstance.expiresAt shouldBe ("TODO")
        }

        // to test the property `format`
        should("test format") {
            // uncomment below to test the property
            //modelInstance.format shouldBe ("TODO")
        }

        // to test the property `includeExt`
        should("test includeExt") {
            // uncomment below to test the property
            //modelInstance.includeExt shouldBe ("TODO")
        }

        // to test the property `includeUploadDate`
        should("test includeUploadDate") {
            // uncomment below to test the property
            //modelInstance.includeUploadDate shouldBe ("TODO")
        }

        // to test the property `layout`
        should("test layout") {
            // uncomment below to test the property
            //modelInstance.layout shouldBe ("TODO")
        }

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `ownerId`
        should("test ownerId") {
            // uncomment below to test the property
            //modelInstance.ownerId shouldBe ("TODO")
        }

        // to test the property `password`
        should("test password") {
            // uncomment below to test the property
            //modelInstance.password shouldBe ("TODO")
        }

        // to test the property `projectId`
        should("test projectId") {
            // uncomment below to test the property
            //modelInstance.projectId shouldBe ("TODO")
        }

        // to test the property `secure`
        should("test secure") {
            // uncomment below to test the property
            //modelInstance.secure shouldBe ("TODO")
        }

        // to test the property `style`
        should("test style") {
            // uncomment below to test the property
            //modelInstance.style shouldBe ("TODO")
        }

        // to test the property `textColor`
        should("test textColor") {
            // uncomment below to test the property
            //modelInstance.textColor shouldBe ("TODO")
        }

        // to test the property `title`
        should("test title") {
            // uncomment below to test the property
            //modelInstance.title shouldBe ("TODO")
        }

    }
}
